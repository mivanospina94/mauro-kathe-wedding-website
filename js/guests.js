$(document).ready(function() {
	let url = new URL(window.location.href);
	let params = url.searchParams;
	let guestId = null;
	
	for (var param of params) {
	  if (param[0].toLowerCase() === "guestid") {
		guestId = param[1];
		break;
	  }
	}

	const ciphertext = "";
	let JsonObject = decrypt(ciphertext);
	let guest = JsonObject.find(x => x.id == guestId);

	if (guest !== undefined) {
		$("#num_persons_1").text(guest.tickets);
		$("#num_persons_2").text(guest.tickets);
		$(".text-guests").text(guest.familia);
		
		if (guest.tickets === 1)
			$("#tickets_text").text("Tenemos 1 lugar reservado para ti")
		else
			$("#tickets_text").text("Tenemos " + guest.tickets + " lugares reservados para ti")
		
	} else {
		$(".guests").hide();
		document.write("404 - Not Found");
	}
	
	function encrypt(jsonInput) {
		const JsonString = JSON.stringify(jsonInput);
		const key = "80d8f65051dd76dd8ffe16fddd875d2a";
		const ciphertext = CryptoJS.AES.encrypt(JsonString, key).toString();

		return ciphertext;
	}
	
	function decrypt(ciphertext){
		const key = "80d8f65051dd76dd8ffe16fddd875d2a";
		const bytesDesencriptados = CryptoJS.AES.decrypt(ciphertext, key);
		const JsonString = bytesDesencriptados.toString(CryptoJS.enc.Utf8);
		return JSON.parse(JsonString);
	}
});